{"version":3,"sources":["services/index.js","pages/LoginPage.js","pages/SignUpPage.js","hocs/WithAuth.js","pages/Lobby.js","App.js","serviceWorker.js","index.js","MessageApp-logo.svg","pages/Lobby.module.scss","MessageApp-icon.svg","pages/Auth.module.scss"],"names":["queryApi","query","axios","defaults","headers","common","setAuthorizationHeaderToken","localStorage","token","Promise","resolve","reject","url","method","data","concat","then","result","catch","err","LoginPage","props","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_handleSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","e","errorMessage","wrap","_context","prev","next","preventDefault","sent","errors","message","alert","setItem","login","history","push","t0","stop","apply","this","arguments","react_default","createElement","className","authStyles","layout","src","logo","alt","style","margin","marginLeft","icon","onSubmit","_x","Form","autoComplete","type","formGroup","htmlFor","value","onChange","target","name","react_router_dom","to","SignUpPage","username","setUsername","_useState5","_useState6","profileImageUrl","setProfileImageUrl","_useState7","_useState8","_useState9","_useState10","confirmPassword","setConfirmPassword","createUser","WithAuth","_ref","ProtectedComponent","react_router","PrivateRoute","exact","path","component","AuthMenu","WithAuth_NotFound","_ref2","Component","rest","objectWithoutProperties","assign","render","isAuthenticated","pathname","state","from","location","Fragment","NotFound","jwtDecode","clear","socket","io","Lobby","lobbyStyles","header","onClick","window","href","Lobby_MessageFeed","Lobby_MessageForm","MessageFeed","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","messages","on","newMessage","setState","slice","msgList","document","getElementById","scrollTop","scrollHeight","clientHeight","length","fetchMessages","loadedMessages","messagesArray","map","Lobby_Message","key","_id","messageFeed","id","loading","React","Message","content","author","createdAt","display","flexDirection","justifyContent","onError","onerror","color","fontSize","fontWeight","letterSpacing","position","bottom","dist_default","fromNow","_callee2","_context2","abrupt","console","log","MessageForm","setContent","handleSubmit","createMessage","messageForm","placeholder","onKeyDown","keyCode","shiftKey","_callee3","_context3","App","LobbyPage","Boolean","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.592356cd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport function queryApi(query) {\n  if (!axios.defaults.headers.common[\"Authorization\"]) {\n    setAuthorizationHeaderToken(localStorage.token);\n  }\n\n  return new Promise((resolve, reject) => {\n    axios({\n      url:\n        process.env.NODE_ENV === \"production\"\n          ? \"/graphql\"\n          : \"http://localhost:8080/graphql\",\n      method: \"post\",\n      data: {\n        query: `\n        ${query}\n        `\n      }\n    })\n      .then(result => {\n        resolve(result.data);\n      })\n      .catch(err => reject(err));\n  });\n}\n\nexport function setAuthorizationHeaderToken(token) {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { queryApi, setAuthorizationHeaderToken } from \"../services\";\nimport icon from \"../MessageApp-icon.svg\";\nimport logo from \"../MessageApp-logo.svg\";\nimport authStyles from \"./Auth.module.scss\";\n\nexport default props => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const result = await queryApi(`\n      mutation {\n        login(email: \"${email}\", password: \"${password}\") {\n          email,\n          token\n        }\n        }\n      `);\n\n      if (result.errors) {\n        const errorMessage = result.errors[0].message;\n        setPassword(\"\");\n\n        alert(errorMessage);\n      } else {\n        localStorage.setItem(\"token\", result.data.login.token);\n        setAuthorizationHeaderToken(result.data.login.token);\n        props.history.push(\"/lobby\");\n      }\n    } catch (err) {\n      const errorMessage = \"That email is not registered to any user\";\n      alert(errorMessage);\n    }\n  }\n\n  return (\n    <div className={authStyles.layout}>\n      <img\n        src={logo}\n        alt=\"MessageApp's logo\"\n        style={{ margin: \"1.25rem\", marginLeft: \"4rem\" }}\n      />\n      <img src={icon} alt=\"MessageApp's icon\" />\n      <form\n        onSubmit={handleSubmit}\n        className={authStyles.Form}\n        autoComplete=\"off\"\n      >\n        <button type=\"submit\">Login</button>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            name=\"email\"\n          />\n        </div>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"password\">Password</label>\n          <br />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            name=\"password\"\n          />\n        </div>\n      </form>\n      <p>\n        Or <Link to=\"/auth/signup\">Sign Up</Link>\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { queryApi, setAuthorizationHeaderToken } from \"../services\";\nimport icon from \"../MessageApp-icon.svg\";\nimport logo from \"../MessageApp-logo.svg\";\nimport authStyles from \"./Auth.module.scss\";\n\nexport default props => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [profileImageUrl, setProfileImageUrl] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const result = await queryApi(`\n      mutation {\n        createUser(email: \"${email}\", username: \"${username}\", \n                   profileImageUrl: \"${profileImageUrl}\" password: \"${password}\") {\n          email,\n          username,\n          profileImageUrl,\n          token\n        }\n        }\n      `);\n\n      if (result.errors) {\n        const errorMessage = result.errors[0].message;\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n\n        alert(errorMessage);\n      } else {\n        localStorage.setItem(\"token\", result.data.createUser.token);\n        setAuthorizationHeaderToken(result.data.createUser.token);\n        props.history.push(\"/lobby\");\n      }\n    } catch (err) {\n      const errorMessage = \"That email is already registered\";\n      alert(errorMessage);\n    }\n  }\n\n  return (\n    <div className={authStyles.layout}>\n      <img\n        src={logo}\n        alt=\"MessageApp's logo\"\n        style={{ margin: \"1.25rem\", marginLeft: \"4rem\" }}\n      />\n      <img src={icon} alt=\"MessageApp's icon\" />\n      <form onSubmit={handleSubmit} className={authStyles.Form} autoComplete=\"off\">\n        <button type=\"submit\">Sign Up</button>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"username\">Username</label>\n          <br />\n          <input\n            type=\"text\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            name=\"email\"\n          />\n        </div>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"username\">Email</label>\n          <br />\n          <input\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            name=\"email\"\n          />\n        </div>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"profileImageUrl\">Profile Image Url</label>\n          <br />\n          <input\n            type=\"text\"\n            value={profileImageUrl}\n            onChange={e => setProfileImageUrl(e.target.value)}\n            name=\"profileImageUrl\"\n          />\n        </div>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"password\">Password</label>\n          <br />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            name=\"password\"\n          />\n        </div>\n        <div className={authStyles.formGroup}>\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\n          <br />\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n            name=\"confirm-password\"\n          />\n        </div>\n      </form>\n      <p>\n        Already a user? <Link to=\"/auth/login\">Login</Link>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport LoginPage from \"../pages/LoginPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default ({ ProtectedComponent }) => (\n  <Switch>\n    <PrivateRoute exact path={[\"/lobby\", \"/\"]} component={ProtectedComponent} />\n    <Route exact path={[\"/auth/login\", \"/auth/signup\"]} component={AuthMenu} />\n    <NotFound />\n  </Switch>\n);\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/auth/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst AuthMenu = () => (\n  <Switch>\n    {isAuthenticated() ? (\n      <Redirect to=\"/lobby\" />\n    ) : (\n      <>\n        <Route exact path=\"/auth/login\" component={LoginPage} />\n        <Route exact path=\"/auth/signup\" component={SignUpPage} />\n      </>\n    )}\n  </Switch>\n);\n\nconst NotFound = props => {\n  return (\n    <div>\n      <h1>Page does not exist</h1>\n      <Link to=\"/lobby\">Go back</Link>\n    </div>\n  );\n};\n\nfunction isAuthenticated() {\n  try {\n    const token = localStorage.token;\n    if (jwtDecode(token)) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    localStorage.clear();\n    return false;\n  }\n}\n","import React, { useState } from \"react\";\nimport Moment from \"react-moment\";\nimport { Route } from \"react-router-dom\";\nimport { queryApi } from \"../services\";\nimport logo from \"../MessageApp-logo.svg\";\nimport lobbyStyles from \"./Lobby.module.scss\";\nimport io from \"socket.io-client\";\nconst socket = io(\n  process.env.NODE_ENV === \"production\"\n    ? \"/\"\n    : \"http://localhost:8080/\"\n);\n\nexport default () => {\n  return (\n    <Route exact path={[\"/lobby\", \"/\"]}>\n      <div className={lobbyStyles.header}>\n        <img src={logo} alt=\"MessageApp's logo\" />\n        <button\n          onClick={() => {\n            localStorage.clear();\n            window.location.href = \"/auth/login\";\n          }}\n        >\n          Sign Out\n        </button>\n      </div>\n      <MessageFeed />\n      <MessageForm />\n    </Route>\n  );\n};\n\nclass MessageFeed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { messages: [] };\n\n    socket.on(\"NEW_MESSAGE\", newMessage => {\n      this.setState({\n        messages: this.state.messages.slice().concat(newMessage)\n      });\n\n      const msgList = document.getElementById(\"msgList\");\n      msgList.scrollTop = msgList.scrollHeight + msgList.clientHeight;\n    });\n  }\n\n  async componentDidMount() {\n    if (!this.state.messages.length) {\n      const loadedMessages = await fetchMessages();\n\n      if (loadedMessages) {\n        this.setState({\n          messages: this.state.messages.slice().concat(loadedMessages)\n        });\n\n        const msgList = document.getElementById(\"msgList\");\n        if (msgList) {\n          msgList.scrollTop = msgList.scrollHeight + msgList.clientHeight;\n        }\n      }\n    }\n  }\n\n  render() {\n    const messagesArray = this.state.messages.map(message => (\n      <Message key={message._id} {...message} />\n    ));\n\n    return (\n      <ul className={lobbyStyles.messageFeed} id=\"msgList\">\n        {messagesArray.length ? (\n          messagesArray\n        ) : (\n          <div className={lobbyStyles.loading}>\n            <div className=\"mesh-loader\">\n              <div className=\"set-one\">\n                <div className=\"circle\" />\n                <div className=\"circle\" />\n              </div>\n              <div className=\"set-two\">\n                <div className=\"circle\" />\n                <div className=\"circle\" />\n              </div>\n            </div>\n          </div>\n        )}\n      </ul>\n    );\n  }\n}\n\nconst Message = ({ content, author, createdAt }) => {\n  return (\n    <li>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          margin: \"0 0.5rem\"\n        }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <img\n            src={author.profileImageUrl}\n            alt={\"profile image of \" + author.username}\n            onError={e => {\n              e.target.onerror = null;\n              e.target.src =\n                \"https://cdn.pixabay.com/photo/2014/04/03/10/32/businessman-310819_1280.png\";\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              marginLeft: \"0.5rem\",\n              justifyContent: \"flex-start\"\n            }}\n          >\n            <p\n              style={{\n                color: \"#2A81D8\",\n                fontSize: \"18px\",\n                fontWeight: 400,\n                letterSpacing: \"2px\",\n                position: \"relative\",\n                bottom: \"10px\"\n              }}\n            >\n              {author.username}\n            </p>\n            <Moment fromNow style={{ position: \"relative\", bottom: \"25px\" }}>\n              {+createdAt || createdAt}\n            </Moment>\n          </div>\n        </div>\n        <p\n          style={{\n            fontWeight: 200,\n            fontSize: \"18px\",\n            position: \"relative\",\n            bottom: \"25px\",\n            letterSpacing: \"1.25px\"\n          }}\n        >\n          {content}\n        </p>\n      </div>\n    </li>\n  );\n};\n\nasync function fetchMessages() {\n  try {\n    const result = await queryApi(`\n      query {\n        messages(sortByCreatedAt: \"asc\") {\n          _id,\n          content,\n          createdAt,\n          author {\n            username,\n            profileImageUrl\n          }\n        }\n      }\n    `);\n\n    // If request is unauthenticated, then token is invalid/expired --> redirect to login\n    if (\n      result.errors &&\n      result.errors[0].message === \"Unauthenticated request\"\n    ) {\n      localStorage.clear();\n      window.location.href = \"/auth/login\";\n    }\n\n    const messages = result.data.messages;\n    return messages;\n  } catch (err) {\n    console.log(\"There was a problem loading messages\"); // refetch messages again # if times\n    return false;\n  }\n}\n\nconst MessageForm = () => {\n  const [content, setContent] = useState(\"\");\n  const handleChange = e => setContent(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    createMessage(content);\n    setContent(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={lobbyStyles.messageForm}>\n      <textarea\n        placeholder=\"Enter a message\"\n        onChange={handleChange}\n        value={content}\n        onKeyDown={e => {\n          if (e.keyCode === 13 && !e.shiftKey) {\n            // prevent default behavior\n            e.preventDefault();\n            // submit form\n            handleSubmit(e);\n          }\n        }}\n      />\n    </form>\n  );\n};\n\nasync function createMessage(content) {\n  try {\n    const result = await queryApi(`\n      mutation {\n        createMessage(content: \"${content}\") {\n          content,\n          createdAt,\n          author {\n            username,\n            profileImageUrl\n          }\n        }\n      }\n    `);\n\n    return result.data;\n  } catch (err) {\n    console.log(\"There was a problem loading messages\"); // refetch messages again # if times\n    return false;\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport WithAuth from \"./hocs/WithAuth\";\nimport LobbyPage from \"./pages/Lobby\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <WithAuth ProtectedComponent={LobbyPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/MessageApp-logo.5f5a2b93.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Lobby_header__-IAXo\",\"messageFeed\":\"Lobby_messageFeed__2TfOo\",\"messageForm\":\"Lobby_messageForm__33eMV\",\"loading\":\"Lobby_loading__3Cxy3\"};","module.exports = __webpack_public_path__ + \"static/media/MessageApp-icon.f23c8f11.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Auth_layout__2Nl-I\",\"formGroup\":\"Auth_formGroup__2W3La\",\"Form\":\"Auth_Form__2NqU9\"};"],"sourceRoot":""}